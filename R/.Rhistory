data.frame() %>%
rename(`Parent Distribution` = .)
rnorm(50000, mean=mean, sd=sd) %>%
data.frame() %>%
rename(Parent_Distribution = .)
rnorm(50000, mean=mean, sd=sd) %>%
data.frame() %>%
rename("Parent Distribution" = ".")
rnorm(50000, mean=mean, sd=sd) %>%
data.frame() %>%
rename("Parent Distribution" = ".") %>%
ggplot(aes(x=`Parent Distribution`))
rnorm(50000, mean=mean, sd=sd) %>%
data.frame() %>%
rename("Parent Distribution" = ".") %>%
ggplot(aes(x=`Parent Distribution`)) +
geom_density(fill=fillcolor, colour="white", adjust = 3, na.rm=TRUE)
rnorm(50000, mean=mean, sd=sd) %>%
data.frame() %>%
rename("Parent Distribution" = ".") %>%
ggplot(aes(x=`Parent Distribution`)) +
geom_density(fill=fillcolor, colour="white", adjust = 3, na.rm=TRUE) +
geom_vline(xintercept=score, size = 2, color=linecolor)
rnorm(50000, mean=mean, sd=sd) %>%
data.frame() %>%
rename("Parent Distribution" = ".") %>%
ggplot(aes(x=`Parent Distribution`)) +
geom_density(fill=fillcolor, colour="white", adjust = 3, na.rm=TRUE) +
geom_vline(xintercept=score, size = 2, color=linecolor) +
xlab("") +
ylab("")
output <- list(text=text, plot=plot)
output <- structure(1, class = psycho)
output <- structure(1, class="psycho")
output <- list(text=text, plot=plot)
output <- structure(output, class="psycho")
output <- structure(output, class="psycho")
output <- list(text=text, plot=plot)
class(output) <- "psycho"
class(output)
output <- list(text=text, plot=plot)
class(output)
output <- list(text=text, plot=plot)
class(output) <- c("psycho", "list")
return(output)
output <- list(text=text, plot=plot)
class(output) <- c("psycho", "list")
output
psycho.print <- function(psycho){
text <- psycho$text
print(text)
}
print(output)
print.psycho <- function(psycho){
text <- psycho$text
print(text)
}
print(output)
print.psycho <- function(psycho){
text <- psycho$text
print(text)
}
print(output)
print(output)
output$text()
assess <- function(score, mean=0, sd=1, linecolor="#E91E63", fillcolor="#2196F3") {
# Text
# -------------
text <- "Text for assess"
# Plot
# -------------
plot <- rnorm(50000, mean=mean, sd=sd) %>%
data.frame() %>%
rename("Parent Distribution" = ".") %>%
ggplot(aes(x=`Parent Distribution`)) +
geom_density(fill=fillcolor, colour="white", adjust = 3, na.rm=TRUE) +
geom_vline(xintercept=score, size = 2, color=linecolor) +
xlab("") +
ylab("")
output <- list(text=text, plot=plot)
class(output) <- c("psycho", "list")
return(output)
}
output <- assess(1.2)
print(output)
percentile <- stats::ecdf(distribution)
percentile <- stats::percentile(score)
percentile <- stats::ecdf(distribution)(score)
percentile
score
values <- list()
values <- list()
values$percentile <- stats::ecdf(distribution)(score)
values.psycho <- function(psycho){
values <- psycho$values
print(values)
}
assess <- function(score, mean=0, sd=1, linecolor="#E91E63", fillcolor="#2196F3") {
# Values
# -------------
values <- list()
values$percentile <- stats::ecdf(distribution)(score)
# Text
# -------------
text <- "Text for assess"
# Plot
# -------------
plot <- rnorm(50000, mean=mean, sd=sd) %>%
data.frame() %>%
rename("Parent Distribution" = ".") %>%
ggplot(aes(x=`Parent Distribution`)) +
geom_density(fill=fillcolor, colour="white", adjust = 3, na.rm=TRUE) +
geom_vline(xintercept=score, size = 2, color=linecolor) +
xlab("") +
ylab("")
output <- list(text=text, plot=plot, values=values)
class(output) <- c("psycho", "list")
return(output)
}
output <- assess(1.2)
output <- valeus(output)
output <- values(output)
values.psycho <- function(psycho){
values <- psycho$values
print(values)
}
values(output)
values <- function(psycho){
values <- psycho$values
print(values)
}
values(output)
percentile <- assess(1.2)
percentile <- assess(1.2)
values <- percentile$values
percentile <- assess(1.2)
percentile <- percentile$values
percentile <- percentile$percentile
percentile
percentile <- assess(1.3)
percentile <- percentile$values
percentile <- percentile$percentile
percentile
round(percentile, 1)
percentile <- assess(1.3)
percentile <- percentile$values
percentile <- round(percentile$percentile, 1)
percentile
df2=NULL
type="full"
method="pearson"
adjust="holm"
df <- df[ , sapply(df, is.numeric)]
# Compute r coefficients
if (type=="full"){
r <- psych::corr.test(df, y=df2, use="pairwise", method=method)$r
} else{
df <- cbind(df, df2)
df <- na.omit(df)  # enable imputation
if (type=="partial"){
r <- ppcor::pcor(df, method=method)$estimate
}
if (type=="semi"){
r <- ppcor::spcor(df, method=method)$estimate
}
}
# Get P values
n <- nrow(df)
p <- psych::corr.p(r, n, adjust=adjust)$p
ci <- psych::corr.p(r, n, adjust=adjust)$ci
# Format into a table
p.mat <- matrix(p, ncol = ncol(r), dimnames = list(dimnames,dimnames))
## define notions for significance levels; spacing is important.
mystars <- ifelse(p < .001, "***", ifelse(p < .01, "** ", ifelse(p < .05, "* ", " ")))
## trunctuate the matrix that holds the correlations to two decimal
r_format <- format(round(cbind(rep(-1.11, ncol(df)), r), 2))[,-1]
## build a new matrix that includes the correlations with their apropriate stars
table <- matrix(paste(r_format, mystars, sep=""), ncol=ncol(df))
diag(table) <- paste(diag(r_format), " ", sep="")
rownames(table) <- colnames(df)
colnames(table) <- paste(colnames(df), "", sep="")
## remove upper triangle
table <- as.matrix(table)
table[upper.tri(table, diag = TRUE)] <- NA
table <- as.data.frame(table)
## remove last column and return the matrix (which is now a data frame)
table <- cbind(table[1:length(table)-1])
df <- neuropsychology::personality
# Processing
# -------------------
# Remove non numeric
df <- df[ , sapply(df, is.numeric)]
# Compute r coefficients
if (type=="full"){
r <- psych::corr.test(df, y=df2, use="pairwise", method=method)$r
} else{
df <- cbind(df, df2)
df <- na.omit(df)  # enable imputation
if (type=="partial"){
r <- ppcor::pcor(df, method=method)$estimate
}
if (type=="semi"){
r <- ppcor::spcor(df, method=method)$estimate
}
}
# Get P values
n <- nrow(df)
p <- psych::corr.p(r, n, adjust=adjust)$p
ci <- psych::corr.p(r, n, adjust=adjust)$ci
# Format into a table
p.mat <- matrix(p, ncol = ncol(r), dimnames = list(dimnames,dimnames))
## define notions for significance levels; spacing is important.
mystars <- ifelse(p < .001, "***", ifelse(p < .01, "** ", ifelse(p < .05, "* ", " ")))
## trunctuate the matrix that holds the correlations to two decimal
r_format <- format(round(cbind(rep(-1.11, ncol(df)), r), 2))[,-1]
## build a new matrix that includes the correlations with their apropriate stars
table <- matrix(paste(r_format, mystars, sep=""), ncol=ncol(df))
diag(table) <- paste(diag(r_format), " ", sep="")
rownames(table) <- colnames(df)
colnames(table) <- paste(colnames(df), "", sep="")
## remove upper triangle
table <- as.matrix(table)
table[upper.tri(table, diag = TRUE)] <- NA
table <- as.data.frame(table)
## remove last column and return the matrix (which is now a data frame)
table <- cbind(table[1:length(table)-1])
corrplot::corrplot.mixed(r, diag="n", lower="ellipse", upper="number", order = "hclust", p.mat = p, sig.level = 0.05, insig="n")
corrplot::corrplot.mixed(r, diag="n", lower="ellipse", upper="number", order = "hclust", p.mat = p, sig.level = 0.05, tl.pos="lt")
corrplot::corrplot.mixed(r, diag="n", lower="ellipse", upper="number", order = "hclust", p.mat = p, sig.level = 0.05, insig="n", tl.pos="lt")
corrplot::corrplot.mixed(r, lower="ellipse", upper="number", order = "hclust", p.mat = p, sig.level = 0.05, insig="n", tl.pos="lt")
df <- neuropsychology::personality
df <- dplyr::select(df, Antagonism, Disinhibition, Extraversion)
df <- as.data.frame(scale(df))
df$Sport <- neuropsychology::personality$Sport
df$Mood_Disorder <- neuropsychology::personality$Mood_Disorder
df <- na.omit(df)
library(rstanarm)
fit <- stan_lm(Antagonism ~ Extraversion * Sport,
data=df,
prior=NULL)
fit <- stan_lm(Antagonism ~ Extraversion ,
data=df,
prior=NULL)
fit <- stan_lm(Antagonism ~ Extraversion,
data=df,
prior=R2(0))
class(fit)
df <- data.frame(X=rnorm(1000), Y=rnorm(1000))
fit <- stan_lm(Y ~ X,
data=df,
prior=R2(0))
class(fit)
summary(fit)
print(fit)
print(fit)
fit <- stan_lm(Y ~ X,
data=df,
prior=R2(0))
print(fit)
df <- data.frame(X=rnorm(1000), Y=rnorm(1000))
fit <- stan_lm(Y ~ X,
data=df,
prior=R2(0))
class(fit)
print(fit)
df <- data.frame(X=rnorm(1000), Y=rnorm(1000))
fit <- stan_lm(Y ~ X,
data=df,
prior=R2(0))
library(stanarm)
library(rstanarm)
df <- data.frame(X=rnorm(1000), Y=rnorm(1000))
fit <- stan_lm(Y ~ X,
data=df,
prior=R2(0))
fit <- stan_lm(Y ~ X,
data=df,
prior=R2(0.5))
fit <- stan_lm(Y ~ X,
data=df,
prior=R2(mean=0))
df <- data.frame(Y=rnorm(1000), X1=rnorm(1000), X2=rnorm(1000))
fit <- stan_lm(Y ~ X1 + X2,
data=df,
prior=R2(0))
fit <- stan_lm(Y ~ X1 + X2,
data=df,
prior=NULL)
class(fit)
print(fit)
df <- data.frame(Y=rnorm(1000), X1=Y+1, X2=rnorm(1000))
df$X2 <- df$Y + 1/cos(df$Y)
fit <- stan_lm(Y ~ X1 + X2,
data=df,
prior=NULL)
df$X2 <- df$Y + cos(df$Y)
fit <- stan_lm(Y ~ X1 + X2,
data=df,
prior=NULL)
df <- cars
names(df)
View(df)
fit <- stan_lm(speed ~ dist,
data=df,
prior=NULL)
fit <- stan_lm(speed ~ dist,
data=cars,
prior=NULL)
df <- iris
summary(iris)
fit <- stan_lm(Sepal.Length ~ Sepal.Width + Petal.Width,
data=iris,
prior=NULL)
fit <- stan_lm(Sepal.Length ~ Sepal.Width * Petal.Width,
data=iris,
prior=NULL)
names(iris)
fit <- stan_lm(Sepal.Length ~ Petal.Length * Petal.Width,
data=iris,
prior=NULL)
names(iris)
fit <- stan_lm(Sepal.Width ~ Petal.Length * Petal.Width,
data=iris,
prior=NULL)
fit <- stan_lm(Sepal.Width ~ Petal.Length * Petal.Width,
data=iris,
prior=NULL)
fit <- stan_lm(Sepal.Width ~ Petal.Length * Petal.Width,
data=iris,
prior=NULL)
names(iris)
fit <- stan_lm(Sepal.Width ~ Petal.Length + Sepal.Length,
data=iris,
prior=NULL)
fit <- stan_lm(Sepal.Width ~ Petal.Length + Sepal.Length,
data=iris,
prior=NULL)
names(mtcars)
fit <- stan_lm(mpg ~ gear + cyl,
data=mtcars,
prior=NULL)
names(mtcars)
fit <- stan_lm(mpg ~ wt + cyl,
data=mtcars,
prior=NULL)
fit <- stan_lm(mpg ~ cyl,
data=mtcars,
prior=NULL)
fit <- stan_lm(mpg ~ cyl,
data=mtcars,
prior=R2(0))
class(fit)
print(fit)
fit <- stan_lm(mpg ~ cyl + wt,
data=mtcars,
prior=R2(0))
class(fit)
print(fit)
library(rstanarm)
fit <- stan_lm(mpg ~ cyl + wt,
data=mtcars,
prior=R2(0))
fit <- stan_lm(mpg ~ cyl + wt,
data=mtcars,
prior=R2(location=0, what="mean"))
fit <- stan_lm(mpg ~ cyl + wt,
data=mtcars,
prior=R2(location=0, what="mean"))
fit <- stan_lm(mpg ~ cyl + wt,
data=mtcars,
prior=R2(location=0.5, what="mean"))
fit <- stan_lm(mpg ~ cyl + wt,
data=mtcars,
prior=normal(location=0))
fit <- stan_lm(mpg ~ cyl + wt,
data=mtcars,
prior=normal(location=0.5))
fit <- stan_lm(mpg ~ cyl + wt,
data=mtcars,
prior=R2(location=0.5, what="median"))
cor.test(mtcars$mpg, mtcars$cyl)
fit <- stan_lm(mpg ~ cyl,
data=mtcars,
prior=R2(location=0.5, what="median"))
summary(mtcars)
fit <- stan_lm(mpg ~ cyl+gear,
data=mtcars,
prior=R2(location=0.5, what="median"))
fit <- stan_lm(mpg ~ cyl + gear,
data=mtcars,
prior=R2(NULL)
cor.test(mtcars$mpg, mtcars$cyl)
class(fit)
print(fit)
fit <- stan_glm(Sport ~ Extraversion * Antagonism,
data=df,
family = binomial(link = "logit"),
prior=NULL)
class(fit)
fit <- stan_lmer(Antagonism ~ Extraversion * Sport + (1|Mood_Disorder),
data=df,
prior=NULL)
class(fit)
"stanreg" %in% class(fit)
print(fit, digit=2)
summary(fit)
fit <- lm(Antagonism ~ Disinhibition * Extraversion, data=df)
summary(fit)
# Values
# -------------
values <- list()
# Summary
# -------------
summary <- data.frame()
# Text
# -------------
text <- "Text for assess"
# Plot
# -------------
plot <- "plot"
output <- list(text=text, plot=plot, summary=summary, values=values)
class(output) <- c("psycho", "list")
return(output)
}
fit <- stan_lm(mpg ~ cyl + gear,
data=mtcars,
prior=R2(NULL)
cor.test(mtcars$mpg, mtcars$cyl)
class(fit)
print(fit)
fit <- stan_glm(Sport ~ Extraversion * Antagonism,
data=df,
family = binomial(link = "logit"),
prior=NULL)
class(fit)
fit <- stan_lmer(Antagonism ~ Extraversion * Sport + (1|Mood_Disorder),
data=df,
prior=NULL)
class(fit)
"stanreg" %in% class(fit)
print(fit, digit=2)
summary(fit)
fit <- lm(Antagonism ~ Disinhibition * Extraversion, data=df)
summary(fit)
# Values
# -------------
values <- list()
# Summary
# -------------
summary <- data.frame()
# Text
# -------------
text <- "Text for assess"
# Plot
# -------------
plot <- "plot"
output <- list(text=text, plot=plot, summary=summary, values=values)
class(output) <- c("psycho", "list")
return(output)
}
fit <- stan_lm(mpg ~ cyl + gear,
data=mtcars,
prior=R2(NULL)
cor.test(mtcars$mpg, mtcars$cyl)
class(fit)
print(fit)
fit <- stan_glm(Sport ~ Extraversion * Antagonism,
data=df,
family = binomial(link = "logit"),
prior=NULL)
class(fit)
fit <- stan_lmer(Antagonism ~ Extraversion * Sport + (1|Mood_Disorder),
data=df,
prior=NULL)
class(fit)
"stanreg" %in% class(fit)
print(fit, digit=2)
summary(fit)
fit <- lm(Antagonism ~ Disinhibition * Extraversion, data=df)
summary(fit)
# Values
# -------------
values <- list()
# Summary
# -------------
summary <- data.frame()
# Text
# -------------
text <- "Text for assess"
# Plot
# -------------
plot <- "plot"
output <- list(text=text, plot=plot, summary=summary, values=values)
class(output) <- c("psycho", "list")
return(output)
}
fit <- stan_lm(mpg ~ cyl + gear,
data=mtcars,
prior=R2(NULL))
cor.test(mtcars$mpg, mtcars$cyl)
fit <- stan_lm(mpg ~ cyl + gear,
data=mtcars,
prior=NULL)
fit <- stan_lm(mpg ~ cyl,
data=mtcars,
prior=NULL)
summary(mtcars)
fit <- stan_glm(vs ~ mpg * cyl,
data=mtcars,
family = binomial(link = "logit"),
prior=NULL)
print(fit)
