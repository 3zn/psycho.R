{
    "collab_server" : "",
    "contents" : "#' Analyze stanreg objects.\n#'\n#' Analyze stanreg objects.\n#'\n#' @param x stanreg object.\n#' @param CI Credible interval bounds.\n#' @param MEDP_step The step used for computing Maximum Effect Direction Probability.\n#' @param MEDP_min The lower bound of MEDP (the minimum effect).\n#' @param ... Arguments passed to or from other methods.\n#'\n#' @return output\n#'\n#' @examples\n#' library(psycho)\n#' require(rstanarm)\n#' fit <- rstanarm::stan_glm(vs ~ mpg * cyl,\n#'   data=mtcars,\n#'   family = binomial(link = \"logit\"),\n#'   prior=NULL)\n#'\n#'  analyze(fit)\n#'\n#' @author Dominique Makowski, \\url{https://dominiquemakowski.github.io/}\n#'\n#' @import rstanarm\n#' @import tidyr\n#' @import dplyr\n#' @import ggplot2\n#' @importFrom stats quantile\n#' @export\nanalyze.stanreg <- function(x, CI=95, MEDP_step=0.05, MEDP_min=0.001, ...) {\n\n  # Processing\n  # -------------\n  fit <- x\n\n  # Extract posterior distributions\n  posteriors <- as.data.frame(fit)\n\n  # Initialize empty values\n  values <- list()\n  # Loop over all variables\n  for (varname in names(posteriors)){\n\n    # Extract posterior\n    posterior <- posteriors[, varname]\n\n    # Find basic posterior indices\n    median=median(posterior)\n    mad=mad(posterior)\n    mean <- mean(posterior)\n    sd <- sd(posterior)\n    CI_values <- quantile(posterior, c((100-CI)/2/100, 1-(100-CI)/2/100))\n\n    # Compute MEDP\n    for (MEDP in seq(0, 100, by = MEDP_step)){\n      MEDP_values <- 100-MEDP\n      MEDP_values <- quantile(posterior, c(0+MEDP_values/2/100, 1-MEDP_values/2/100))\n\n      if (median >= 0){\n        if (MEDP_values[1] <= MEDP_min){\n          break\n        }\n      } else {\n        if (MEDP_values[2] >= -MEDP_min){\n          break\n        }\n      }\n    }\n\n    # Create text\n    if (grepl(\":\", varname)){\n      splitted <- strsplit(varname, \":\")[[1]]\n      if (length(splitted)==2){\n        name <- paste(\"interaction effect between \", splitted[1], \" and \", splitted[2], sep=\"\")\n      } else{\n          name <- varname\n        }\n      } else{\n        name <- paste(\"effect of \", varname, sep=\"\")\n    }\n\n    text <- paste(\"Concerning the \", name, \", there is a probability of \", format_digit(MEDP), \"% that its coefficient is between \", format_digit(MEDP_values[1]), \" and \", format_digit(MEDP_values[2]), \" (Median = \", format_digit(median), \", MAD = \", format_digit(mad), \", Mean = \", format_digit(mean), \", SD = \", format_digit(sd), \", \", CI, \"% CI [\", format_digit(CI_values[1]), \", \", format_digit(CI_values[2]), \"]).\", sep=\"\")\n\n    # Store all that\n    values[[varname]] <- list(median=median,\n                              mad=mad,\n                              mean=mean,\n                              sd=sd,\n                              CI_values=CI_values,\n                              MEDP=MEDP,\n                              MEDP_values=MEDP_values,\n                              posterior=posterior,\n                              text=text)\n\n\n\n  }\n\n\n  # Effect size\n  # -------------\n  # if (standardized==T){\n  #   print(\"Interpreting effect size following Cohen (1988)... Make sure your variables were scaled and centered!\")\n  #\n  #   # http://www.polyu.edu.hk/mm/effectsizefaqs/thresholds_for_interpreting_effect_sizes2.html\n  #   # Compute the probabilities\n  #\n  #   verylarge_neg <- length(posterior[posterior <= -1.30])/length(posterior)\n  #   large_neg <- length(posterior[posterior > -1.30 & posterior <= -0.80])/length(posterior)\n  #   medium_neg <- length(posterior[posterior > -0.80 & posterior <= -0.50])/length(posterior)\n  #   small_neg <- length(posterior[posterior > -0.50 & posterior <= -0.20])/length(posterior)\n  #   verysmall_neg <- length(posterior[posterior > -0.20 & posterior < 0])/length(posterior)\n  #\n  #   verylarge_pos <- length(posterior[posterior >= 1.30])/length(posterior)\n  #   large_pos <- length(posterior[posterior < 1.30 & posterior >= 0.80])/length(posterior)\n  #   medium_pos <- length(posterior[posterior < 0.80 & posterior >= 0.50])/length(posterior)\n  #   small_pos <- length(posterior[posterior < 0.50 & posterior >= 0.20])/length(posterior)\n  #   verysmall_pos <- length(posterior[posterior < 0.20 & posterior > 0])/length(posterior)\n  #\n  #\n  #\n  #   effect_size <- data.frame(Direction=c(\"Negative\", \"Negative\", \"Negative\", \"Negative\", \"Negative\", \"Positive\", \"Positive\", \"Positive\", \"Positive\", \"Positive\"),\n  #                             Size=c(\"VeryLarge\", \"Large\", \"Medium\", \"Small\", \"VerySmall\", \"VerySmall\", \"Small\", \"Medium\", \"Large\", \"VeryLarge\"),\n  #                             Probability=c(verylarge_neg, large_neg, medium_neg, small_neg, verysmall_neg, verysmall_pos, small_pos, medium_pos, large_pos, verylarge_pos))\n  #   effect_size$Probability[is.na(effect_size$Probability)] <- 0\n  #\n  #   if(mean >= 0){\n  #     opposite_prob <- sum(effect_size$Probability[effect_size$Direction==\"Negative\"])\n  #     opposite_max <- min(posterior[posterior < 0])\n  #     print(paste(\"Based on Cohen (1988) recommandations, there is a probability of \", round(verylarge_pos*100, 2), \" that this effect size is very large, \", round(large_pos*100, 2), \"% that this effect size is large, \", round(medium_pos*100, 2), \"% that this effect size is medium, \", round(small_pos*100, 2), \"% that this effect size is small, \", round(verysmall_pos*100, 2), \"% that this effect is very small and \", round(opposite_prob*100, 2), \"% that it has an opposite direction (between 0 and \", signif(opposite_max, 2), \").\", sep=\"\"))\n  #   } else{\n  #     opposite_prob <- sum(effect_size$Probability[effect_size$Direction==\"Positive\"])\n  #     opposite_max <- max(posterior[posterior > 0])\n  #     print(paste(\"Based on Cohen (1988) recommandations, there is a probability of \", round(verylarge_neg*100, 2), \" that this effect size is very large, \", round(large_neg*100, 2), \"% that this effect size is large, \", round(medium_neg*100, 2), \"% that this effect size is medium, \", round(small_neg*100, 2), \"% that this effect size is small, \", round(verysmall_neg*100, 2), \"% that this effect is very small and \", round(opposite_prob*100, 2), \"% that it has an opposite direction (between 0 and \", signif(opposite_max, 2), \").\", sep=\"\"))\n  #   }\n  #   return(effect_size)\n  #\n  # }\n\n\n\n  # Summary\n  # -------------\n  MEDPs <- c()\n  for (varname in names(values)){\n    MEDPs <- c(MEDPs, values[[varname]]$MEDP)\n  }\n  medians <- c()\n  for (varname in names(values)){\n    medians <- c(medians, values[[varname]]$median)\n  }\n  mads <- c()\n  for (varname in names(values)){\n    mads <- c(mads, values[[varname]]$mad)\n  }\n  means <- c()\n  for (varname in names(values)){\n    means <- c(means, values[[varname]]$mean)\n  }\n  sds <- c()\n  for (varname in names(values)){\n    sds <- c(sds, values[[varname]]$sd)\n  }\n  CIs <- c()\n  for (varname in names(values)){\n    CIs <- c(CIs, values[[varname]]$CI_values)\n  }\n  summary <- data.frame(Variable=names(values), MEDP=MEDPs, Median=medians, MAD=mads, Mean=means, SD=sds, CI_lower=CIs[seq(1, length(CIs), 2)], CI_higher=CIs[seq(2, length(CIs), 2)])\n\n\n\n\n  # Text\n  # -------------\n  # Model\n  info <- paste(\"We fitted a Markov Chain Monte Carlo [type] model to predict [Y] with [X] (formula =\", deparse(fit$formula), \"). Priors were set as follow: [INSERT INFO ABOUT PRIORS].\", sep=\"\")\n\n  # Coefs\n  coefs_text <- c()\n  for (varname in names(values)){\n    coefs_text <- c(coefs_text, values[[varname]]$text)\n  }\n  text <- c(info, coefs_text)\n\n  # Plot\n  # -------------\n  plot <- posteriors %>%\n    # select(-`(Intercept)`) %>%\n    gather() %>%\n    rename_(Variable=\"key\", Coefficient=\"value\") %>%\n    ggplot(aes_string(x=\"Variable\", y=\"Coefficient\", fill=\"Variable\")) +\n    geom_violin() +\n    geom_boxplot(fill=\"grey\", alpha=0.3, outlier.shape=NA) +\n    stat_summary(fun.y = mean, geom = \"errorbar\", aes_string(ymax = \"..y..\", ymin = \"..y..\"), width = .75, linetype = \"dashed\", colour=\"red\") +\n    geom_hline(aes(yintercept=0)) +\n    theme_classic() +\n    coord_flip() +\n    scale_fill_brewer(palette=\"Set1\") +\n    scale_colour_brewer(palette=\"Set1\")\n\n\n  output <- list(text=text, plot=plot, summary=summary, values=values)\n\n  class(output) <- c(\"psychobject\", \"list\")\n  return(output)\n}\n",
    "created" : 1502184707034.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3853747792",
    "id" : "C1A0E54F",
    "lastKnownWriteTime" : 1502200445,
    "last_content_update" : 1502200445755,
    "path" : "D:/Programs/Dropbox/RECHERCHE/N/psycho.R/R/analyze.stanreg.R",
    "project_path" : "R/analyze.stanreg.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}