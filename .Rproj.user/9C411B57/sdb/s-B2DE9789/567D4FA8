{
    "collab_server" : "",
    "contents" : "#' Multiple Correlations.\n#'\n#' Compare a given score to a parent population.\n#'\n#' @param df The score.\n#' @param df2 The general population's mean.\n#' @param type A character string indicating which correlation type is to be computed. One of \"full\" (default\"), \"partial\" or \"semi\" for semi-partial correlations.\n#' @param method A character string indicating which correlation coefficient is to be computed. One of \"pearson\" (default), \"kendall\", or \"spearman\" can be abbreviated.\n#' @param adjust What adjustment for multiple tests should be used? (\"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"BY\", \"fdr\", \"none\"). See \\link[stats]{p.adjust} for details about why to use \"holm\" rather than \"bonferroni\").\n#'\n#' @return output\n#'\n#' @examples\n#' assess(124, mean=100, sd=15)\n#'\n#' @author Dominique Makowski, \\url{https://dominiquemakowski.github.io/}\n#'\n#' @importFrom stats na.omit\n#' @importFrom psych corr.test\n#' @importFrom psych corr.p\n#' @import corrplot\n#' @import ppcor\n#' @export\ncorrelation <- function(df, df2=NULL, type=\"full\", method=\"pearson\", adjust=\"holm\") {\n\n  # Processing\n  # -------------------\n\n  # Remove non numeric\n  df <- df[ , sapply(df, is.numeric)]\n\n  # Compute r coefficients\n  if (type==\"full\"){\n    r <- psych::corr.test(df, y=df2, use=\"pairwise\", method=method)$r\n  } else{\n    df <- cbind(df, df2)\n    df <- stats::na.omit(df)  # enable imputation\n    if (type==\"partial\"){\n      r <- ppcor::pcor(df, method=method)$estimate\n    }\n    if (type==\"semi\"){\n      r <- ppcor::spcor(df, method=method)$estimate\n    }\n  }\n\n\n  # Get P values\n  n <- nrow(df)\n  p <- psych::corr.p(r, n, adjust=adjust)$p\n  ci <- psych::corr.p(r, n, adjust=adjust)$ci\n\n\n  # Format into a table\n  p.mat <- matrix(p, ncol=ncol(r), dimnames=list(names(df), names(df)))\n  ## define notions for significance levels; spacing is important.\n  mystars <- ifelse(p < .001, \"***\", ifelse(p < .01, \"** \", ifelse(p < .05, \"* \", \" \")))\n  ## trunctuate the matrix that holds the correlations to two decimal\n  r_format <- format(round(cbind(rep(-1.11, ncol(df)), r), 2))[,-1]\n  ## build a new matrix that includes the correlations with their apropriate stars\n  table <- matrix(paste(r_format, mystars, sep=\"\"), ncol=ncol(df))\n  diag(table) <- paste(diag(r_format), \" \", sep=\"\")\n  rownames(table) <- colnames(df)\n  colnames(table) <- paste(colnames(df), \"\", sep=\"\")\n  ## remove upper triangle\n  table <- as.matrix(table)\n  table[upper.tri(table, diag = TRUE)] <- NA\n  table <- as.data.frame(table)\n  ## remove last column and return the matrix (which is now a data frame)\n  table <- cbind(table[1:length(table)-1])\n\n\n  # Values\n  # -------------\n  values <- list(r=r, p=p, ci=ci, table=table)\n\n  # Summary\n  # -------------\n  summary <- table\n\n  # Text\n  # -------------\n  text <- table\n\n\n  # Plot\n  # -------------\n  plot <- corrplot::corrplot.mixed(r, lower=\"ellipse\", upper=\"number\", order = \"hclust\", p.mat = p, sig.level = 0.05, insig=\"n\", tl.pos=\"lt\")\n\n\n  # Output\n  # -------------\n  output <- list(text=text, plot=plot, summary=summary, values=values)\n\n  class(output) <- c(\"psycho\", \"list\")\n  return(output)\n}\n",
    "created" : 1501166841072.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3275643480",
    "id" : "567D4FA8",
    "lastKnownWriteTime" : 1501167516,
    "last_content_update" : 1501167516777,
    "path" : "D:/Programs/Dropbox/RECHERCHE/N/psycho.R/R/correlation.R",
    "project_path" : "R/correlation.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}