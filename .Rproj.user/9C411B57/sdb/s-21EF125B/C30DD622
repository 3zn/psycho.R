{
    "collab_server" : "",
    "contents" : "#' Compare a score to a parent population.\n#'\n#' Compare a given score to a parent population.\n#'\n#' @param score The score.\n#' @param mean The general population's mean.\n#' @param sd The general population's standart deviation.\n#' @param linecolor The colour of the vertical line.\n#' @param fillcolor The colour of the density plot.\n#'\n#' @return output\n#'\n#' @examples\n#' assess(124, mean=100, sd=15)\n#'\n#' @importFrom stats ecdf\n#' @import ggplot2\n#' @import dplyr\n#' @export\nassess <- function(score, mean=0, sd=1, linecolor=\"#E91E63\", fillcolor=\"#2196F3\") {\n  # Values\n  # -------------\n  values <- list()\n  values$percentile <- stats::ecdf(stats::rnorm(50000, mean=mean, sd=sd))(score)\n\n  # Text\n  # -------------\n  text <- \"Text for assess\"\n\n  # Plot\n  # -------------\n  plot <- stats::rnorm(50000, mean=mean, sd=sd) %>%\n    data.frame() %>%\n    rename(\"Parent Distribution\" = \".\") %>%\n    ggplot(aes_(x=\"Parent Distribution\")) +\n    geom_density(fill=fillcolor, colour=\"white\", adjust = 3, na.rm=TRUE) +\n    geom_vline(xintercept=score, size = 2, color=linecolor) +\n    xlab(\"\") +\n    ylab(\"\")\n\n  output <- list(text=text, plot=plot, values=values)\n\n  class(output) <- c(\"psycho\", \"list\")\n  return(output)\n}\n\n",
    "created" : 1501143896673.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3484999236",
    "id" : "C30DD622",
    "lastKnownWriteTime" : 1501145086,
    "last_content_update" : 1501145086984,
    "path" : "D:/Programs/Dropbox/RECHERCHE/N/psycho.R/R/assess.R",
    "project_path" : "R/assess.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}